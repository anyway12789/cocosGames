{"version":3,"sources":["assets/scripts/dragonWidget.js"],"names":["AutoScaleType","cc","Enum","WidthAutoScale","HeightAutoScale","FixedWidth","FixedHeight","Class","Component","editor","menu","properties","autoScaleType","type","start","console","log","node","name","view","getVisibleSize","width","height","getFrameSize","getCanvasSize","getDesignResolutionSize","screenSize","designResolutionSize","scale","setScale"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,aAAa,GAAGC,EAAE,CAACC,IAAH,CAAQ;AACxBC,EAAAA,cAAc,EAAE,CADQ;AAExBC,EAAAA,eAAe,EAAE,CAFO;AAGxBC,EAAAA,UAAU,EAAE,CAHY;AAIxBC,EAAAA,WAAW,EAAE;AAJW,CAAR,CAApB;AAMAL,EAAE,CAACM,KAAH,CAAS;AACL,aAASN,EAAE,CAACO,SADP;AAELC,EAAAA,MAAM,EAAC;AACHC,IAAAA,IAAI,EAAC;AADF,GAFF;AAKLC,EAAAA,UAAU,EAAE;AACRC,IAAAA,aAAa,EAAE;AACX,iBAASZ,aAAa,CAACK,UADZ;AAEXQ,MAAAA,IAAI,EAAEb;AAFK;AADP,GALP;AAYLc,EAAAA,KAZK,mBAYG;AACJ;AACAC,IAAAA,OAAO,CAACC,GAAR,6BAAsC,KAAKC,IAAL,CAAUC,IAAhD;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAqCf,EAAE,CAACkB,IAAH,CAAQC,cAAR,GAAyBC,KAA9D,EAAoEpB,EAAE,CAACkB,IAAH,CAAQC,cAAR,GAAyBE,MAA7F;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCf,EAAE,CAACkB,IAAH,CAAQI,YAAR,GAAuBF,KAA1D,EAAgEpB,EAAE,CAACkB,IAAH,CAAQI,YAAR,GAAuBD,MAAvF;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6Bf,EAAE,CAACkB,IAAH,CAAQK,aAAR,GAAwBH,KAArD,EAA2DpB,EAAE,CAACkB,IAAH,CAAQK,aAAR,GAAwBF,MAAnF;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA6Cf,EAAE,CAACkB,IAAH,CAAQM,uBAAR,GAAkCJ,KAA/E,EAAqFpB,EAAE,CAACkB,IAAH,CAAQM,uBAAR,GAAkCH,MAAvH,EANI,CAOJ;;AACA,QAAII,UAAU,GAAGzB,EAAE,CAACkB,IAAH,CAAQC,cAAR,EAAjB,CARI,CASJ;;AACA,QAAIO,oBAAoB,GAAG1B,EAAE,CAACkB,IAAH,CAAQM,uBAAR,EAA3B;AACA,QAAIG,KAAJ;;AACA,YAAQ,KAAKhB,aAAb;AACI,WAAKZ,aAAa,CAACG,cAAnB;AACIyB,QAAAA,KAAK,GAAGF,UAAU,CAACL,KAAX,GAAmBM,oBAAoB,CAACN,KAAhD;AACA,aAAKJ,IAAL,CAAUY,QAAV,CAAmBD,KAAnB,EAAyB,CAAzB;AACA;;AACJ,WAAK5B,aAAa,CAACI,eAAnB;AACIwB,QAAAA,KAAK,GAAGF,UAAU,CAACJ,MAAX,GAAoBK,oBAAoB,CAACL,MAAjD;AACA,aAAKL,IAAL,CAAUY,QAAV,CAAmB,CAAnB,EAAqBD,KAArB;AACA;;AACJ,WAAK5B,aAAa,CAACK,UAAnB;AACIuB,QAAAA,KAAK,GAAGF,UAAU,CAACL,KAAX,GAAmBM,oBAAoB,CAACN,KAAhD;AACA,aAAKJ,IAAL,CAAUY,QAAV,CAAmBD,KAAnB;AACA;;AACJ,WAAK5B,aAAa,CAACM,WAAnB;AACIsB,QAAAA,KAAK,GAAGF,UAAU,CAACJ,MAAX,GAAoBK,oBAAoB,CAACL,MAAjD;AACA,aAAKL,IAAL,CAAUY,QAAV,CAAmBD,KAAnB;AACA;AAhBR;;AAkBAb,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BY,KAA1B;AACH;AA3CI,CAAT","sourceRoot":"/","sourcesContent":["/*\n * @Author: your name\n * @Date: 2021-10-05 16:15:17\n * @LastEditTime: 2021-10-05 16:15:55\n * @LastEditors: your name\n * @Description: In User Settings Edit\n * @FilePath: /vn-games/assets/scripts/dragonWidget.js\n */\nlet AutoScaleType = cc.Enum({\n    WidthAutoScale: 1,\t\n    HeightAutoScale: 2,\n    FixedWidth: 3,\n    FixedHeight: 4\n});\ncc.Class({\n    extends: cc.Component,\n    editor:{\n        menu:\"custom/AddAutoScale\"\n    },\n    properties: {\n        autoScaleType: {\n            default: AutoScaleType.FixedWidth,\n            type: AutoScaleType,\n        },\n    },\n\n    start() {\n        //适配宽度模式  (ps 只用于龙骨动画节点，其他节点最好采用cocos自带的widget组件来适配)\n        console.log(`----------------scale--${this.node.name}-----------`);\n        console.log(\"scale>>getVisibleSize:\",cc.view.getVisibleSize().width,cc.view.getVisibleSize().height);\n        console.log(\"scale>>>getFrameSize\",cc.view.getFrameSize().width,cc.view.getFrameSize().height);\n        console.log(\"scale>>canvas>\",cc.view.getCanvasSize().width,cc.view.getCanvasSize().height);\n        console.log(\"scale>>getDesignResolutionSize\",cc.view.getDesignResolutionSize().width,cc.view.getDesignResolutionSize().height);\n        //当前屏幕的分辨率\n        let screenSize = cc.view.getVisibleSize();\n        //设计的分辨率\n        let designResolutionSize = cc.view.getDesignResolutionSize();\n        let scale;\n        switch (this.autoScaleType) {\n            case AutoScaleType.WidthAutoScale:\n                scale = screenSize.width / designResolutionSize.width;\n                this.node.setScale(scale,1);\n                break;\n            case AutoScaleType.HeightAutoScale:\n                scale = screenSize.height / designResolutionSize.height;\n                this.node.setScale(1,scale);\n                break;\n            case AutoScaleType.FixedWidth:\n                scale = screenSize.width / designResolutionSize.width;\n                this.node.setScale(scale);\n                break;\n            case AutoScaleType.FixedHeight:\n                scale = screenSize.height / designResolutionSize.height;\n                this.node.setScale(scale);\n                break;\n        }\n        console.log(\"sceneSclae\", scale);\n    },\n});\n"]}